{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/Person/Person.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","pages/HomePage/HomePage.tsx","api.ts","pages/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","Loader","PersonLink","sex","name","slug","Person","person","born","died","motherName","fatherName","mother","father","personSlug","useParams","PeopleTable","people","map","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useEffect","catch","finally","preparedPeople","useMemo","find","p","findParents","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cd1f3c42.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const navbarItemClass = ({ isActive }: {\n    isActive: boolean\n  }) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={navbarItemClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  sex: string,\n  name: string,\n  slug?: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({ sex, name, slug }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person as PersonType } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: PersonType,\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug: personSlug,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink\n          name={name}\n          sex={sex}\n          slug={personSlug}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink\n              name={mother.name}\n              sex={mother.sex}\n              slug={mother.slug}\n            />\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink\n              name={father.name}\n              sex={father.sex}\n              slug={father.slug}\n            />\n          )\n          : fatherName || '-'}\n      </td>\n\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person as PersonType } from '../../types';\nimport { Person } from '../Person';\n\ntype Props = {\n  people: PersonType [],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <Person\n            key={person.name}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navigation } from './components';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState, useMemo } from 'react';\nimport { Loader, PeopleTable } from '../../components';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nconst findParents = (people: Person []) => {\n  return people.map(person => {\n    const mother = people\n      .find(p => p.name === person.motherName);\n    const father = people\n      .find(p => p.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person []>([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = useMemo(() => findParents(people), [people]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong. Please try again later.\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <PeopleTable\n            people={preparedPeople}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage, PeoplePage } from './pages';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}